{"ast":null,"code":"var _jsxFileName = \"/Users/mateohernandez/Desktop/DynWeb/dynamicwebmidterm/src/components/Randomimages.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomImagesContainer = () => {\n  _s();\n  useEffect(() => {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      const imageContainer = document.getElementById(\"imageContainer\");\n      const imageList = [\"../assets/Random Images/Image1.HEIC\", \"../assets/Random Images/Image2.Jpg\", \"../assets/Random Images/Image 3.Jpg\", \"../assets/Random Images/Image 4.Jpg\", \"../assets/Random Images/Image 5.Jpg\"];\n      const generateRandomImage = () => {\n        const selectedImage = imageList[Math.floor(Math.random() * imageList.length)];\n        const newImg = document.createElement(\"img\");\n        newImg.setAttribute(\"src\", selectedImage);\n        // newImg.classList.add(\"random-image\"); //(reminder)adding the \"random-image\" class to my newImg variable\n\n        const containerWidth = imageContainer.offsetWidth;\n        const containerHeight = imageContainer.offsetHeight;\n        const imgWidth = 100;\n        const imgHeight = 100;\n        const randomLeft = Math.floor(Math.random() * imgWidth);\n        const randomTop = Math.floor(Math.random() * imgHeight);\n        newImg.style.left = `${randomLeft}px`;\n        newImg.style.top = `${randomTop}px`;\n        newImg.style.position = \"absolute\";\n        imageContainer.appendChild(newImg);\n      };\n      const interval = setInterval(generateRandomImage, 2000);\n      return () => clearInterval(interval);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"imageContainer\",\n    className: \"h-96 relative\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n// const RandomImagesContainer = () => {\n//   return document.addEventListener(\"DOMContentLoaded\", () => {\n//     const imageContainer = document.getElementById(\"imageContainer\");\n//     const imageList = [\n//       \"../assets/Random Images/Image1.HEIC\",\n//       \"../assets/Random Images/Image2.Jpg\",\n//       \"../assets/Random Images/Image 3.Jpg\",\n//       \"../assets/Random Images/Image 4.Jpg\",\n//       \"../assets/Random Images/Image 5.Jpg\",\n//     ];\n//     function createRandomImage() {\n//       // 1. Select a random image from the list\n//       const randomIndex = Math.floor(Math.random() * imageList.length);\n//       const selectedImageSrc = imageList[randomIndex];\n\n//       // 2. Create a new image element\n//       const img = document.createElement(\"img\");\n//       img.src = selectedImageSrc;\n//       img.classList.add(\"random-image\");\n\n//       // 3. Generate random top and left positions within the container\n//       const containerWidth = imageContainer.offsetWidth;\n//       const containerHeight = imageContainer.offsetHeight;\n\n//       // Adjust for image size to ensure it's fully within bounds\n//       const imgWidth = 100; // Assuming max-width/height from CSS\n//       const imgHeight = 100;\n\n//       const randomLeft = Math.floor(\n//         Math.random() * (containerWidth - imgWidth)\n//       );\n//       const randomTop = Math.floor(\n//         Math.random() * (containerHeight - imgHeight)\n//       );\n\n//       img.style.left = `${randomLeft}px`;\n//       img.style.top = `${randomTop}px`;\n\n//       // 4. Append the image to the container\n//       imageContainer.appendChild(img);\n//     }\n//     <container className=\"h-96\">\n//       setInterval(createRandomImage, 2000)\n//     </container>;\n//   });\n// };\n_s(RandomImagesContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RandomImagesContainer;\nexport default RandomImagesContainer;\nvar _c;\n$RefreshReg$(_c, \"RandomImagesContainer\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","RandomImagesContainer","_s","document","addEventListener","imageContainer","getElementById","imageList","generateRandomImage","selectedImage","Math","floor","random","length","newImg","createElement","setAttribute","containerWidth","offsetWidth","containerHeight","offsetHeight","imgWidth","imgHeight","randomLeft","randomTop","style","left","top","position","appendChild","interval","setInterval","clearInterval","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mateohernandez/Desktop/DynWeb/dynamicwebmidterm/src/components/Randomimages.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst RandomImagesContainer = () => {\n  useEffect(() => {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      const imageContainer = document.getElementById(\"imageContainer\");\n      const imageList = [\n        \"../assets/Random Images/Image1.HEIC\",\n        \"../assets/Random Images/Image2.Jpg\",\n        \"../assets/Random Images/Image 3.Jpg\",\n        \"../assets/Random Images/Image 4.Jpg\",\n        \"../assets/Random Images/Image 5.Jpg\",\n      ];\n      const generateRandomImage = () => {\n        const selectedImage =\n          imageList[Math.floor(Math.random() * imageList.length)];\n        const newImg = document.createElement(\"img\");\n        newImg.setAttribute(\"src\", selectedImage);\n        // newImg.classList.add(\"random-image\"); //(reminder)adding the \"random-image\" class to my newImg variable\n\n        const containerWidth = imageContainer.offsetWidth;\n        const containerHeight = imageContainer.offsetHeight;\n        const imgWidth = 100;\n        const imgHeight = 100;\n\n        const randomLeft = Math.floor(Math.random() * imgWidth);\n        const randomTop = Math.floor(Math.random() * imgHeight);\n\n        newImg.style.left = `${randomLeft}px`;\n        newImg.style.top = `${randomTop}px`;\n        newImg.style.position = \"absolute\";\n\n        imageContainer.appendChild(newImg);\n      };\n      const interval = setInterval(generateRandomImage, 2000);\n\n      return () => clearInterval(interval);\n    });\n  });\n  return <div id=\"imageContainer\" className=\"h-96 relative\"></div>;\n};\n\n// const RandomImagesContainer = () => {\n//   return document.addEventListener(\"DOMContentLoaded\", () => {\n//     const imageContainer = document.getElementById(\"imageContainer\");\n//     const imageList = [\n//       \"../assets/Random Images/Image1.HEIC\",\n//       \"../assets/Random Images/Image2.Jpg\",\n//       \"../assets/Random Images/Image 3.Jpg\",\n//       \"../assets/Random Images/Image 4.Jpg\",\n//       \"../assets/Random Images/Image 5.Jpg\",\n//     ];\n//     function createRandomImage() {\n//       // 1. Select a random image from the list\n//       const randomIndex = Math.floor(Math.random() * imageList.length);\n//       const selectedImageSrc = imageList[randomIndex];\n\n//       // 2. Create a new image element\n//       const img = document.createElement(\"img\");\n//       img.src = selectedImageSrc;\n//       img.classList.add(\"random-image\");\n\n//       // 3. Generate random top and left positions within the container\n//       const containerWidth = imageContainer.offsetWidth;\n//       const containerHeight = imageContainer.offsetHeight;\n\n//       // Adjust for image size to ensure it's fully within bounds\n//       const imgWidth = 100; // Assuming max-width/height from CSS\n//       const imgHeight = 100;\n\n//       const randomLeft = Math.floor(\n//         Math.random() * (containerWidth - imgWidth)\n//       );\n//       const randomTop = Math.floor(\n//         Math.random() * (containerHeight - imgHeight)\n//       );\n\n//       img.style.left = `${randomLeft}px`;\n//       img.style.top = `${randomTop}px`;\n\n//       // 4. Append the image to the container\n//       imageContainer.appendChild(img);\n//     }\n//     <container className=\"h-96\">\n//       setInterval(createRandomImage, 2000)\n//     </container>;\n//   });\n// };\n\nexport default RandomImagesContainer;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClCJ,SAAS,CAAC,MAAM;IACdK,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;MAClD,MAAMC,cAAc,GAAGF,QAAQ,CAACG,cAAc,CAAC,gBAAgB,CAAC;MAChE,MAAMC,SAAS,GAAG,CAChB,qCAAqC,EACrC,oCAAoC,EACpC,qCAAqC,EACrC,qCAAqC,EACrC,qCAAqC,CACtC;MACD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;QAChC,MAAMC,aAAa,GACjBF,SAAS,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,SAAS,CAACM,MAAM,CAAC,CAAC;QACzD,MAAMC,MAAM,GAAGX,QAAQ,CAACY,aAAa,CAAC,KAAK,CAAC;QAC5CD,MAAM,CAACE,YAAY,CAAC,KAAK,EAAEP,aAAa,CAAC;QACzC;;QAEA,MAAMQ,cAAc,GAAGZ,cAAc,CAACa,WAAW;QACjD,MAAMC,eAAe,GAAGd,cAAc,CAACe,YAAY;QACnD,MAAMC,QAAQ,GAAG,GAAG;QACpB,MAAMC,SAAS,GAAG,GAAG;QAErB,MAAMC,UAAU,GAAGb,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGS,QAAQ,CAAC;QACvD,MAAMG,SAAS,GAAGd,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGU,SAAS,CAAC;QAEvDR,MAAM,CAACW,KAAK,CAACC,IAAI,GAAG,GAAGH,UAAU,IAAI;QACrCT,MAAM,CAACW,KAAK,CAACE,GAAG,GAAG,GAAGH,SAAS,IAAI;QACnCV,MAAM,CAACW,KAAK,CAACG,QAAQ,GAAG,UAAU;QAElCvB,cAAc,CAACwB,WAAW,CAACf,MAAM,CAAC;MACpC,CAAC;MACD,MAAMgB,QAAQ,GAAGC,WAAW,CAACvB,mBAAmB,EAAE,IAAI,CAAC;MAEvD,OAAO,MAAMwB,aAAa,CAACF,QAAQ,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,oBAAO9B,OAAA;IAAKiC,EAAE,EAAC,gBAAgB;IAACC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAApC,EAAA,CArFMD,qBAAqB;AAAAsC,EAAA,GAArBtC,qBAAqB;AAuF3B,eAAeA,qBAAqB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}