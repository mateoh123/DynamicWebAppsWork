{"ast":null,"code":"var _jsxFileName = \"/Users/mateohernandez/Desktop/DynWeb/dynamicwebmidterm/src/components/Randomimages.js\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomImagesContainer = () => {\n  return document.addEventListener(\"DOMContentLoaded\", () => {\n    const imageContainer = document.getElementById(\"imageContainer\");\n    const imageList = [\"../assets/Random Images/Image1.HEIC\", \"../assets/Random Images/Image2.Jpg\", \"../assets/Random Images/Image 3.Jpg\", \"../assets/Random Images/Image 4.Jpg\", \"../assets/Random Images/Image 5.Jpg\"];\n    function createRandomImage() {\n      // 1. Select a random image from the list\n      const randomIndex = Math.floor(Math.random() * imageList.length);\n      const selectedImageSrc = imageList[randomIndex];\n\n      // 2. Create a new image element\n      const img = document.createElement(\"img\");\n      img.src = selectedImageSrc;\n      img.classList.add(\"random-image\");\n\n      // 3. Generate random top and left positions within the container\n      const containerWidth = imageContainer.offsetWidth;\n      const containerHeight = imageContainer.offsetHeight;\n\n      // Adjust for image size to ensure it's fully within bounds\n      const imgWidth = 100; // Assuming max-width/height from CSS\n      const imgHeight = 100;\n      const randomLeft = Math.floor(Math.random() * (containerWidth - imgWidth));\n      const randomTop = Math.floor(Math.random() * (containerHeight - imgHeight));\n      img.style.left = `${randomLeft}px`;\n      img.style.top = `${randomTop}px`;\n\n      // 4. Append the image to the container\n      imageContainer.appendChild(img);\n    }\n  });\n  /*#__PURE__*/_jsxDEV(\"container\", {\n    classNames: \"h-96\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n_c = RandomImagesContainer;\nexport default RandomImagesContainer;\nvar _c;\n$RefreshReg$(_c, \"RandomImagesContainer\");","map":{"version":3,"names":["cx","PropTypes","jsxDEV","_jsxDEV","RandomImagesContainer","document","addEventListener","imageContainer","getElementById","imageList","createRandomImage","randomIndex","Math","floor","random","length","selectedImageSrc","img","createElement","src","classList","add","containerWidth","offsetWidth","containerHeight","offsetHeight","imgWidth","imgHeight","randomLeft","randomTop","style","left","top","appendChild","classNames","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mateohernandez/Desktop/DynWeb/dynamicwebmidterm/src/components/Randomimages.js"],"sourcesContent":["import cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst RandomImagesContainer = () => {\n  return document.addEventListener(\"DOMContentLoaded\", () => {\n    const imageContainer = document.getElementById(\"imageContainer\");\n    const imageList = [\n      \"../assets/Random Images/Image1.HEIC\",\n      \"../assets/Random Images/Image2.Jpg\",\n      \"../assets/Random Images/Image 3.Jpg\",\n      \"../assets/Random Images/Image 4.Jpg\",\n      \"../assets/Random Images/Image 5.Jpg\",\n    ];\n    function createRandomImage() {\n      // 1. Select a random image from the list\n      const randomIndex = Math.floor(Math.random() * imageList.length);\n      const selectedImageSrc = imageList[randomIndex];\n\n      // 2. Create a new image element\n      const img = document.createElement(\"img\");\n      img.src = selectedImageSrc;\n      img.classList.add(\"random-image\");\n\n      // 3. Generate random top and left positions within the container\n      const containerWidth = imageContainer.offsetWidth;\n      const containerHeight = imageContainer.offsetHeight;\n\n      // Adjust for image size to ensure it's fully within bounds\n      const imgWidth = 100; // Assuming max-width/height from CSS\n      const imgHeight = 100;\n\n      const randomLeft = Math.floor(\n        Math.random() * (containerWidth - imgWidth)\n      );\n      const randomTop = Math.floor(\n        Math.random() * (containerHeight - imgHeight)\n      );\n\n      img.style.left = `${randomLeft}px`;\n      img.style.top = `${randomTop}px`;\n\n      // 4. Append the image to the container\n      imageContainer.appendChild(img);\n    }\n  });\n  <container classNames=\"h-96\">\n    \n  </container>;\n};\n\nexport default RandomImagesContainer;\n"],"mappings":";AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAClC,OAAOC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;IACzD,MAAMC,cAAc,GAAGF,QAAQ,CAACG,cAAc,CAAC,gBAAgB,CAAC;IAChE,MAAMC,SAAS,GAAG,CAChB,qCAAqC,EACrC,oCAAoC,EACpC,qCAAqC,EACrC,qCAAqC,EACrC,qCAAqC,CACtC;IACD,SAASC,iBAAiBA,CAAA,EAAG;MAC3B;MACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,SAAS,CAACM,MAAM,CAAC;MAChE,MAAMC,gBAAgB,GAAGP,SAAS,CAACE,WAAW,CAAC;;MAE/C;MACA,MAAMM,GAAG,GAAGZ,QAAQ,CAACa,aAAa,CAAC,KAAK,CAAC;MACzCD,GAAG,CAACE,GAAG,GAAGH,gBAAgB;MAC1BC,GAAG,CAACG,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;;MAEjC;MACA,MAAMC,cAAc,GAAGf,cAAc,CAACgB,WAAW;MACjD,MAAMC,eAAe,GAAGjB,cAAc,CAACkB,YAAY;;MAEnD;MACA,MAAMC,QAAQ,GAAG,GAAG,CAAC,CAAC;MACtB,MAAMC,SAAS,GAAG,GAAG;MAErB,MAAMC,UAAU,GAAGhB,IAAI,CAACC,KAAK,CAC3BD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIQ,cAAc,GAAGI,QAAQ,CAC5C,CAAC;MACD,MAAMG,SAAS,GAAGjB,IAAI,CAACC,KAAK,CAC1BD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIU,eAAe,GAAGG,SAAS,CAC9C,CAAC;MAEDV,GAAG,CAACa,KAAK,CAACC,IAAI,GAAG,GAAGH,UAAU,IAAI;MAClCX,GAAG,CAACa,KAAK,CAACE,GAAG,GAAG,GAAGH,SAAS,IAAI;;MAEhC;MACAtB,cAAc,CAAC0B,WAAW,CAAChB,GAAG,CAAC;IACjC;EACF,CAAC,CAAC;EACF,aAAAd,OAAA;IAAW+B,UAAU,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AACd,CAAC;AAACC,EAAA,GA7CInC,qBAAqB;AA+C3B,eAAeA,qBAAqB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}