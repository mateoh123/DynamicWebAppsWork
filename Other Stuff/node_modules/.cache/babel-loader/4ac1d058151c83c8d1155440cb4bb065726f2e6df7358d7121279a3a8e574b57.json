{"ast":null,"code":"var _jsxFileName = \"/Users/mateohernandez/Desktop/DynWebNotes/DynamicWebAppsWork/week3-4-5combo/src/pages/DropdownPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Dropdown from '../components/Dropdown';\n// import {Panel} from '../components/Dropdown'\n// import Panel from '../components/Panel'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownPage = () => {\n  _s();\n  // this piece of state is where we recieve our dropdown selected value\n  // we keep track of it in the parent component so that it, and all children of the parent\n  // have access to this piece of states value and can update and rerender when it changes\n  const [value, setValue] = useState(null);\n  let filteredData = DATA_TO_FILTER;\n\n  // if the used selected an option from our dropdown, find the value key, if they oth exist\n  if (value !== null && value !== void 0 && value.value) {\n    // filter our array by value of selected option\n    filteredData = DATA_TO_FILTER.filter(student => student.team === value.value);\n  }\n  const handleChange = option => {\n    setValue(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: COLOR_MAP[value === null || value === void 0 ? void 0 : value.value] || null,\n      children: [\"Dropdown page with user selectd value of: \", value === null || value === void 0 ? void 0 : value.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: OPTIONS,\n      onChange: handleChange,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: COLOR_MAP[value === null || value === void 0 ? void 0 : value.value],\n      children: [\"Students from \", value === null || value === void 0 ? void 0 : value.label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), filteredData.map(student => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: student.name\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(DropdownPage, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n_c = DropdownPage;\nexport default DropdownPage;\nvar _c;\n$RefreshReg$(_c, \"DropdownPage\");","map":{"version":3,"names":["useState","Dropdown","jsxDEV","_jsxDEV","DropdownPage","_s","value","setValue","filteredData","DATA_TO_FILTER","filter","student","team","handleChange","option","children","className","COLOR_MAP","label","fileName","_jsxFileName","lineNumber","columnNumber","options","OPTIONS","onChange","map","name","id","_c","$RefreshReg$"],"sources":["/Users/mateohernandez/Desktop/DynWebNotes/DynamicWebAppsWork/week3-4-5combo/src/pages/DropdownPage.js"],"sourcesContent":["import {useState} from 'react'\nimport Dropdown from '../components/Dropdown'\n// import {Panel} from '../components/Dropdown'\n// import Panel from '../components/Panel'\n\n\nconst DropdownPage = () => {\n  // this piece of state is where we recieve our dropdown selected value\n  // we keep track of it in the parent component so that it, and all children of the parent\n  // have access to this piece of states value and can update and rerender when it changes\n  const [value, setValue] = useState(null)\n\n  let filteredData = DATA_TO_FILTER\n\n  // if the used selected an option from our dropdown, find the value key, if they oth exist\n  if (value?.value) {\n    // filter our array by value of selected option\n    filteredData = DATA_TO_FILTER.filter(\n      (student) => student.team === value.value\n    )\n  }\n\n  const handleChange = (option) => {\n    setValue(option)\n  }\n\n  return (\n    <div>\n      <h1 className={COLOR_MAP[value?.value] || null}>\n        Dropdown page with user selectd value of: {value?.label}\n      </h1>\n      <Dropdown options={OPTIONS} onChange={handleChange} value={value} />\n      <h2 className={COLOR_MAP[value?.value]}>Students from {value?.label}:</h2>\n      {filteredData.map((student) => {\n        return <p key={student.id}>{student.name}</p>\n      })}\n    </div>\n  )\n}\n\nexport default DropdownPage\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,IAAIQ,YAAY,GAAGC,cAAc;;EAEjC;EACA,IAAIH,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEA,KAAK,EAAE;IAChB;IACAE,YAAY,GAAGC,cAAc,CAACC,MAAM,CACjCC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAKN,KAAK,CAACA,KACtC,CAAC;EACH;EAEA,MAAMO,YAAY,GAAIC,MAAM,IAAK;IAC/BP,QAAQ,CAACO,MAAM,CAAC;EAClB,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAIa,SAAS,EAAEC,SAAS,CAACX,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEA,KAAK,CAAC,IAAI,IAAK;MAAAS,QAAA,GAAC,4CACJ,EAACT,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEY,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACLnB,OAAA,CAACF,QAAQ;MAACsB,OAAO,EAAEC,OAAQ;MAACC,QAAQ,EAAEZ,YAAa;MAACP,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpEnB,OAAA;MAAIa,SAAS,EAAEC,SAAS,CAACX,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEA,KAAK,CAAE;MAAAS,QAAA,GAAC,gBAAc,EAACT,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEY,KAAK,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzEd,YAAY,CAACkB,GAAG,CAAEf,OAAO,IAAK;MAC7B,oBAAOR,OAAA;QAAAY,QAAA,EAAqBJ,OAAO,CAACgB;MAAI,GAAzBhB,OAAO,CAACiB,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC;IAC/C,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAhCKD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAkClB,eAAeA,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}