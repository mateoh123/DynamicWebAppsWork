{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst RandomImagesContainer = () => {\n  _s();\n  useEffect(() => {});\n};\n\n// const RandomImagesContainer = () => {\n//   return document.addEventListener(\"DOMContentLoaded\", () => {\n//     const imageContainer = document.getElementById(\"imageContainer\");\n//     const imageList = [\n//       \"../assets/Random Images/Image1.HEIC\",\n//       \"../assets/Random Images/Image2.Jpg\",\n//       \"../assets/Random Images/Image 3.Jpg\",\n//       \"../assets/Random Images/Image 4.Jpg\",\n//       \"../assets/Random Images/Image 5.Jpg\",\n//     ];\n//     function createRandomImage() {\n//       // 1. Select a random image from the list\n//       const randomIndex = Math.floor(Math.random() * imageList.length);\n//       const selectedImageSrc = imageList[randomIndex];\n\n//       // 2. Create a new image element\n//       const img = document.createElement(\"img\");\n//       img.src = selectedImageSrc;\n//       img.classList.add(\"random-image\");\n\n//       // 3. Generate random top and left positions within the container\n//       const containerWidth = imageContainer.offsetWidth;\n//       const containerHeight = imageContainer.offsetHeight;\n\n//       // Adjust for image size to ensure it's fully within bounds\n//       const imgWidth = 100; // Assuming max-width/height from CSS\n//       const imgHeight = 100;\n\n//       const randomLeft = Math.floor(\n//         Math.random() * (containerWidth - imgWidth)\n//       );\n//       const randomTop = Math.floor(\n//         Math.random() * (containerHeight - imgHeight)\n//       );\n\n//       img.style.left = `${randomLeft}px`;\n//       img.style.top = `${randomTop}px`;\n\n//       // 4. Append the image to the container\n//       imageContainer.appendChild(img);\n//     }\n//     <container className=\"h-96\">\n//       setInterval(createRandomImage, 2000)\n//     </container>;\n//   });\n// };\n_s(RandomImagesContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RandomImagesContainer;\nexport default RandomImagesContainer;\nvar _c;\n$RefreshReg$(_c, \"RandomImagesContainer\");","map":{"version":3,"names":["useEffect","RandomImagesContainer","_s","_c","$RefreshReg$"],"sources":["/Users/mateohernandez/Desktop/DynWeb/dynamicwebmidterm/src/components/Randomimages.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst RandomImagesContainer = () => {\n  useEffect(() => {\n    \n\n\n\n  });\n};\n\n// const RandomImagesContainer = () => {\n//   return document.addEventListener(\"DOMContentLoaded\", () => {\n//     const imageContainer = document.getElementById(\"imageContainer\");\n//     const imageList = [\n//       \"../assets/Random Images/Image1.HEIC\",\n//       \"../assets/Random Images/Image2.Jpg\",\n//       \"../assets/Random Images/Image 3.Jpg\",\n//       \"../assets/Random Images/Image 4.Jpg\",\n//       \"../assets/Random Images/Image 5.Jpg\",\n//     ];\n//     function createRandomImage() {\n//       // 1. Select a random image from the list\n//       const randomIndex = Math.floor(Math.random() * imageList.length);\n//       const selectedImageSrc = imageList[randomIndex];\n\n//       // 2. Create a new image element\n//       const img = document.createElement(\"img\");\n//       img.src = selectedImageSrc;\n//       img.classList.add(\"random-image\");\n\n//       // 3. Generate random top and left positions within the container\n//       const containerWidth = imageContainer.offsetWidth;\n//       const containerHeight = imageContainer.offsetHeight;\n\n//       // Adjust for image size to ensure it's fully within bounds\n//       const imgWidth = 100; // Assuming max-width/height from CSS\n//       const imgHeight = 100;\n\n//       const randomLeft = Math.floor(\n//         Math.random() * (containerWidth - imgWidth)\n//       );\n//       const randomTop = Math.floor(\n//         Math.random() * (containerHeight - imgHeight)\n//       );\n\n//       img.style.left = `${randomLeft}px`;\n//       img.style.top = `${randomTop}px`;\n\n//       // 4. Append the image to the container\n//       imageContainer.appendChild(img);\n//     }\n//     <container className=\"h-96\">\n//       setInterval(createRandomImage, 2000)\n//     </container>;\n//   });\n// };\n\nexport default RandomImagesContainer;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClCF,SAAS,CAAC,MAAM,CAKhB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,CAtDMD,qBAAqB;AAAAE,EAAA,GAArBF,qBAAqB;AAwD3B,eAAeA,qBAAqB;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}