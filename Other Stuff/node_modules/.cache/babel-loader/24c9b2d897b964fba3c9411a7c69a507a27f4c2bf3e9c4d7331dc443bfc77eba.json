{"ast":null,"code":"import cx from \"classnames\";\nimport PropTypes from \"prop-types\";\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const imageContainer = document.getElementById(\"imageContainer\");\n  const imageList = [\"../assets/Random Images/Image1.HEIC\", \"../assets/Random Images/Image2.Jpg\", \"../assets/Random Images/Image 3.Jpg\", \"../assets/Random Images/Image 4.Jpg\", \"../assets/Random Images/Image 5.Jpg\"];\n  function createRandomImage() {\n    // 1. Select a random image from the list\n    const randomIndex = Math.floor(Math.random() * imageList.length);\n    const selectedImageSrc = imageList[randomIndex];\n\n    // 2. Create a new image element\n    const img = document.createElement(\"img\");\n    img.src = selectedImageSrc;\n    img.classList.add(\"random-image\");\n\n    // 3. Generate random top and left positions within the container\n    const containerWidth = imageContainer.offsetWidth;\n    const containerHeight = imageContainer.offsetHeight;\n\n    // Adjust for image size to ensure it's fully within bounds\n    const imgWidth = 100; // Assuming max-width/height from CSS\n    const imgHeight = 100;\n    const randomLeft = Math.floor(Math.random() * (containerWidth - imgWidth));\n    const randomTop = Math.floor(Math.random() * (containerHeight - imgHeight));\n    img.style.left = `${randomLeft}px`;\n    img.style.top = `${randomTop}px`;\n\n    // 4. Append the image to the container\n    imageContainer.appendChild(img);\n  } // Appear every 2 seconds\n});\nexport default RandomImagesContainer;","map":{"version":3,"names":["cx","PropTypes","document","addEventListener","imageContainer","getElementById","imageList","createRandomImage","randomIndex","Math","floor","random","length","selectedImageSrc","img","createElement","src","classList","add","containerWidth","offsetWidth","containerHeight","offsetHeight","imgWidth","imgHeight","randomLeft","randomTop","style","left","top","appendChild","RandomImagesContainer"],"sources":["/Users/mateohernandez/Desktop/DynWeb/dynamicwebmidterm/src/components/Randomimages.js"],"sourcesContent":["import cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const imageContainer = document.getElementById(\"imageContainer\");\n  const imageList = [\n    \"../assets/Random Images/Image1.HEIC\",\n    \"../assets/Random Images/Image2.Jpg\",\n    \"../assets/Random Images/Image 3.Jpg\",\n    \"../assets/Random Images/Image 4.Jpg\",\n    \"../assets/Random Images/Image 5.Jpg\",\n  ];\n\n  function createRandomImage() {\n    // 1. Select a random image from the list\n    const randomIndex = Math.floor(Math.random() * imageList.length);\n    const selectedImageSrc = imageList[randomIndex];\n\n    // 2. Create a new image element\n    const img = document.createElement(\"img\");\n    img.src = selectedImageSrc;\n    img.classList.add(\"random-image\");\n\n    // 3. Generate random top and left positions within the container\n    const containerWidth = imageContainer.offsetWidth;\n    const containerHeight = imageContainer.offsetHeight;\n\n    // Adjust for image size to ensure it's fully within bounds\n    const imgWidth = 100; // Assuming max-width/height from CSS\n    const imgHeight = 100;\n\n    const randomLeft = Math.floor(Math.random() * (containerWidth - imgWidth));\n    const randomTop = Math.floor(Math.random() * (containerHeight - imgHeight));\n\n    img.style.left = `${randomLeft}px`;\n    img.style.top = `${randomTop}px`;\n\n    // 4. Append the image to the container\n    imageContainer.appendChild(img);\n  } // Appear every 2 seconds\n});\n\n\n\nexport default RandomImagesContainer;\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAElCC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,cAAc,GAAGF,QAAQ,CAACG,cAAc,CAAC,gBAAgB,CAAC;EAChE,MAAMC,SAAS,GAAG,CAChB,qCAAqC,EACrC,oCAAoC,EACpC,qCAAqC,EACrC,qCAAqC,EACrC,qCAAqC,CACtC;EAED,SAASC,iBAAiBA,CAAA,EAAG;IAC3B;IACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,SAAS,CAACM,MAAM,CAAC;IAChE,MAAMC,gBAAgB,GAAGP,SAAS,CAACE,WAAW,CAAC;;IAE/C;IACA,MAAMM,GAAG,GAAGZ,QAAQ,CAACa,aAAa,CAAC,KAAK,CAAC;IACzCD,GAAG,CAACE,GAAG,GAAGH,gBAAgB;IAC1BC,GAAG,CAACG,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;;IAEjC;IACA,MAAMC,cAAc,GAAGf,cAAc,CAACgB,WAAW;IACjD,MAAMC,eAAe,GAAGjB,cAAc,CAACkB,YAAY;;IAEnD;IACA,MAAMC,QAAQ,GAAG,GAAG,CAAC,CAAC;IACtB,MAAMC,SAAS,GAAG,GAAG;IAErB,MAAMC,UAAU,GAAGhB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIQ,cAAc,GAAGI,QAAQ,CAAC,CAAC;IAC1E,MAAMG,SAAS,GAAGjB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIU,eAAe,GAAGG,SAAS,CAAC,CAAC;IAE3EV,GAAG,CAACa,KAAK,CAACC,IAAI,GAAG,GAAGH,UAAU,IAAI;IAClCX,GAAG,CAACa,KAAK,CAACE,GAAG,GAAG,GAAGH,SAAS,IAAI;;IAEhC;IACAtB,cAAc,CAAC0B,WAAW,CAAChB,GAAG,CAAC;EACjC,CAAC,CAAC;AACJ,CAAC,CAAC;AAIF,eAAeiB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}